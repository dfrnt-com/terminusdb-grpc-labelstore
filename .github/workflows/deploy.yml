name: Build and Deploy to AZ on production
on:
  push:
#    tags:
#      - "v*"

  workflow_dispatch:
    inputs:
      input:
        description: "Rebuild reason"
        required: false
        default: "Manual build and push"

env:
  AWS_REGION : "eu-north-1"
  ECR_REPO: "${{ vars.AWS_ACCOUNT_NONPROD }}.dkr.ecr.eu-north-1.amazonaws.com/dfrnt-nonprod/terminusdb/grpc-labelstore"
  IMAGE_TAG: "latest"

permissions:
  id-token: write # This is required for requesting the JWT for use with AWS
  contents: read  # This is required for actions/checkout

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_NONPROD }}:role/github-actions-ecr-dfrnt-com-terminusdb-grpc-labelstore"
        role-session-name: push-ecr-dfrnt-com-terminusdb-grpc-labelstore
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-publish
      shell: bash
      run: |
        docker build . -t "$ECR_REPO:$IMAGE_TAG"
        docker push "$ECR_REPO:$IMAGE_TAG"
        echo "Push to $ECR_REPO:$IMAGE_TAG"

    - name: Build
      run: |
        docker build . -t "${{ vars.AZURE_REGISTRY_LOGIN_SERVER }}/terminusdb-grpc-labelstore:${GITHUB_REF##*/}"

    - uses: azure/docker-login@v1
      with:
        login-server: ${{ vars.AZURE_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASS }}

    - name: Push to docker
      run: docker push "${{ vars.AZURE_REGISTRY_LOGIN_SERVER }}/terminusdb-grpc-labelstore:${GITHUB_REF##*/}"
